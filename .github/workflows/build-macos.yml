name: Build macOS App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install create-dmg
      run: |
        # Install create-dmg using Homebrew
        brew install create-dmg
        
    - name: Extract version from tag
      id: version
      run: |
        # Remove 'v' prefix from tag name to get version
        version=${GITHUB_REF_NAME#v}
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Extracted version: $version"
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r build/common/requirements-build.txt
        
    - name: Build macOS app
      run: |
        # Pass version to build script
        python build/macos/build.py --version ${{ steps.version.outputs.version }}
        
    - name: Verify build output
      run: |
        # Check if the DMG was created
        if [ -f "dist/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.dmg" ]; then
          size=$(stat -f%z "dist/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.dmg")
          size_mb=$(echo "scale=2; $size / 1048576" | bc)
          echo "SUCCESS: DMG created successfully"
          echo "Location: dist/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.dmg"
          echo "Size: ${size_mb} MB"
        else
          echo "ERROR: DMG not found"
          echo "Expected location: dist/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.dmg"
          echo "Directory contents:"
          ls -la dist/
          exit 1
        fi
        
    - name: Upload DMG as artifact
      uses: actions/upload-artifact@v4
      with:
        name: FriesenEnrollmentConverter-${{ steps.version.outputs.version }}
        path: dist/macos/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.dmg
        retention-days: 30
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Friesen Enrollment Converter ${{ steps.version.outputs.version }}
        body: |
          macOS DMG for Friesen Enrollment Converter v${{ steps.version.outputs.version }}
        files: dist/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
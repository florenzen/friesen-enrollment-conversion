name: Build Windows Executable

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Extract version from tag
      id: version
      run: |
        # Remove 'v' prefix from tag name to get version
        $version = $env:GITHUB_REF_NAME -replace '^v', ''
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Extracted version: $version"
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        # Ensure pip cache directory exists and install dependencies
        mkdir -p ~/.cache/pip
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r build/common/requirements-build.txt
        
    - name: Build executable
      run: |
        # Pass version to build script
        python build/windows/build.py --version ${{ steps.version.outputs.version }}
        
    - name: Verify build output
      run: |
        # Check if the executable was created
        if (Test-Path "dist/windows/FriesenEnrollmentConverter.exe") {
          $size = (Get-Item "dist/windows/FriesenEnrollmentConverter.exe").Length
          echo "SUCCESS: Executable created successfully"
          echo "Location: dist/windows/FriesenEnrollmentConverter.exe"
          echo "Size: $([math]::Round($size / 1MB, 2)) MB"
        } else {
          echo "ERROR: Executable not found"
          echo "Expected location: dist/windows/FriesenEnrollmentConverter.exe"
          echo "Directory contents:"
          Get-ChildItem -Path "dist" -Recurse | Format-Table Name, Length, FullName
          exit 1
        }
        
    - name: Rename executable with version
      run: |
        # Rename the executable to include version
        $exePath = "dist/windows/FriesenEnrollmentConverter.exe"
        $newExePath = "dist/windows/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.exe"
        
        if (Test-Path $exePath) {
          Move-Item $exePath $newExePath
          echo "Renamed executable to: $newExePath"
        } else {
          echo "ERROR: Executable not found at $exePath"
          exit 1
        }
        
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: FriesenEnrollmentConverter-${{ steps.version.outputs.version }}
        path: dist/windows/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.exe
        retention-days: 30
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Friesen Enrollment Converter ${{ steps.version.outputs.version }}
        body: |
          Windows executable for Friesen Enrollment Converter v${{ steps.version.outputs.version }}
        files: dist/windows/FriesenEnrollmentConverter-${{ steps.version.outputs.version }}.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 